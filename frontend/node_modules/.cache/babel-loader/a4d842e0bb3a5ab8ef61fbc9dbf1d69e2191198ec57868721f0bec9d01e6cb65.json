{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\excel-chat-ai\\\\frontend\\\\src\\\\components\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadFile() {\n  _s();\n  const [sheets, setSheets] = useState([]);\n  const [fileName, setFileName] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const handleUpload = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const res = await axios.post(\"http://localhost:8000/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setSheets(res.data.sheets);\n      setFileName(res.data.filename);\n      setMessage(\"File uploaded successfully!\");\n    } catch (err) {\n      var _err$response, _err$response2, _err$response2$data;\n      console.error(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      setMessage(\"Upload failed: \" + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.detail) || err.message));\n    }\n  };\n  const loadSheet = async sheetName => {\n    try {\n      const res = await axios.get(\"http://localhost:8000/sheet\", {\n        params: {\n          filename: fileName,\n          sheet_name: sheetName\n        }\n      });\n      setData(res.data);\n    } catch (err) {\n      var _err$response3, _err$response4, _err$response4$data;\n      console.error(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.data) || err.message);\n      setMessage(\"Failed to load sheet: \" + (((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.detail) || err.message));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Excel File Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), fileName && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Uploaded File: \", fileName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 20\n    }, this), sheets.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sheets:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: sheets.map((sheet, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => loadSheet(sheet),\n            children: sheet\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), data.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sheet Data (First 100 Rows)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        cellPadding: \"5\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.keys(data[0]).map((col, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: col\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map((row, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.values(row).map((val, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this))\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadFile, \"d4wdouY3vD5EJFrcLbia+60GxY0=\");\n_c = UploadFile;\nvar _c;\n$RefreshReg$(_c, \"UploadFile\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadFile","_s","sheets","setSheets","fileName","setFileName","data","setData","message","setMessage","handleUpload","e","file","target","files","formData","FormData","append","res","post","headers","filename","err","_err$response","_err$response2","_err$response2$data","console","error","response","detail","loadSheet","sheetName","get","params","sheet_name","_err$response3","_err$response4","_err$response4$data","style","padding","children","_jsxFileName","lineNumber","columnNumber","type","onChange","length","map","sheet","index","onClick","border","cellPadding","Object","keys","col","idx","row","values","val","i","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/excel-chat-ai/frontend/src/components/FileUpload.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function UploadFile() {\r\n  const [sheets, setSheets] = useState([]);\r\n  const [fileName, setFileName] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    try {\r\n      const res = await axios.post(\"http://localhost:8000/upload\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n\r\n      setSheets(res.data.sheets);\r\n      setFileName(res.data.filename);\r\n      setMessage(\"File uploaded successfully!\");\r\n    } catch (err) {\r\n      console.error(err.response?.data || err.message);\r\n      setMessage(\"Upload failed: \" + (err.response?.data?.detail || err.message));\r\n    }\r\n  };\r\n\r\n  const loadSheet = async (sheetName) => {\r\n    try {\r\n      const res = await axios.get(\"http://localhost:8000/sheet\", {\r\n        params: { filename: fileName, sheet_name: sheetName }\r\n      });\r\n      setData(res.data);\r\n    } catch (err) {\r\n      console.error(err.response?.data || err.message);\r\n      setMessage(\"Failed to load sheet: \" + (err.response?.data?.detail || err.message));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h2>Excel File Upload</h2>\r\n      <input type=\"file\" onChange={handleUpload} />\r\n      <p>{message}</p>\r\n      {fileName && <p>Uploaded File: {fileName}</p>}\r\n\r\n      {sheets.length > 0 && (\r\n        <div>\r\n          <h3>Sheets:</h3>\r\n          <ul>\r\n            {sheets.map((sheet, index) => (\r\n              <li key={index}>\r\n                <button onClick={() => loadSheet(sheet)}>{sheet}</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      {data.length > 0 && (\r\n        <div>\r\n          <h3>Sheet Data (First 100 Rows)</h3>\r\n          <table border=\"1\" cellPadding=\"5\">\r\n            <thead>\r\n              <tr>\r\n                {Object.keys(data[0]).map((col, idx) => (\r\n                  <th key={idx}>{col}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map((row, idx) => (\r\n                <tr key={idx}>\r\n                  {Object.values(row).map((val, i) => (\r\n                    <td key={i}>{val}</td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMc,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChC,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAI,CAACF,IAAI,EAAE;IAEX,MAAMG,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEL,IAAI,CAAC;IAE7B,IAAI;MACF,MAAMM,GAAG,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAAC,8BAA8B,EAAEJ,QAAQ,EAAE;QACrEK,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MACnD,CAAC,CAAC;MAEFjB,SAAS,CAACe,GAAG,CAACZ,IAAI,CAACJ,MAAM,CAAC;MAC1BG,WAAW,CAACa,GAAG,CAACZ,IAAI,CAACe,QAAQ,CAAC;MAC9BZ,UAAU,CAAC,6BAA6B,CAAC;IAC3C,CAAC,CAAC,OAAOa,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,cAAA,EAAAC,mBAAA;MACZC,OAAO,CAACC,KAAK,CAAC,EAAAJ,aAAA,GAAAD,GAAG,CAACM,QAAQ,cAAAL,aAAA,uBAAZA,aAAA,CAAcjB,IAAI,KAAIgB,GAAG,CAACd,OAAO,CAAC;MAChDC,UAAU,CAAC,iBAAiB,IAAI,EAAAe,cAAA,GAAAF,GAAG,CAACM,QAAQ,cAAAJ,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAclB,IAAI,cAAAmB,mBAAA,uBAAlBA,mBAAA,CAAoBI,MAAM,KAAIP,GAAG,CAACd,OAAO,CAAC,CAAC;IAC7E;EACF,CAAC;EAED,MAAMsB,SAAS,GAAG,MAAOC,SAAS,IAAK;IACrC,IAAI;MACF,MAAMb,GAAG,GAAG,MAAMrB,KAAK,CAACmC,GAAG,CAAC,6BAA6B,EAAE;QACzDC,MAAM,EAAE;UAAEZ,QAAQ,EAAEjB,QAAQ;UAAE8B,UAAU,EAAEH;QAAU;MACtD,CAAC,CAAC;MACFxB,OAAO,CAACW,GAAG,CAACZ,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOgB,GAAG,EAAE;MAAA,IAAAa,cAAA,EAAAC,cAAA,EAAAC,mBAAA;MACZX,OAAO,CAACC,KAAK,CAAC,EAAAQ,cAAA,GAAAb,GAAG,CAACM,QAAQ,cAAAO,cAAA,uBAAZA,cAAA,CAAc7B,IAAI,KAAIgB,GAAG,CAACd,OAAO,CAAC;MAChDC,UAAU,CAAC,wBAAwB,IAAI,EAAA2B,cAAA,GAAAd,GAAG,CAACM,QAAQ,cAAAQ,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAc9B,IAAI,cAAA+B,mBAAA,uBAAlBA,mBAAA,CAAoBR,MAAM,KAAIP,GAAG,CAACd,OAAO,CAAC,CAAC;IACpF;EACF,CAAC;EAED,oBACET,OAAA;IAAKuC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BzC,OAAA;MAAAyC,QAAA,EAAI;IAAiB;MAAApC,QAAA,EAAAqC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B5C,OAAA;MAAO6C,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEnC;IAAa;MAAAN,QAAA,EAAAqC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7C5C,OAAA;MAAAyC,QAAA,EAAIhC;IAAO;MAAAJ,QAAA,EAAAqC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACfvC,QAAQ,iBAAIL,OAAA;MAAAyC,QAAA,GAAG,iBAAe,EAACpC,QAAQ;IAAA;MAAAA,QAAA,EAAAqC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE5CzC,MAAM,CAAC4C,MAAM,GAAG,CAAC,iBAChB/C,OAAA;MAAAyC,QAAA,gBACEzC,OAAA;QAAAyC,QAAA,EAAI;MAAO;QAAApC,QAAA,EAAAqC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChB5C,OAAA;QAAAyC,QAAA,EACGtC,MAAM,CAAC6C,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBlD,OAAA;UAAAyC,QAAA,eACEzC,OAAA;YAAQmD,OAAO,EAAEA,CAAA,KAAMpB,SAAS,CAACkB,KAAK,CAAE;YAAAR,QAAA,EAAEQ;UAAK;YAAA5C,QAAA,EAAAqC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS;QAAC,GADlDM,KAAK;UAAA7C,QAAA,EAAAqC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACL;MAAC;QAAAvC,QAAA,EAAAqC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAvC,QAAA,EAAAqC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN,EAEArC,IAAI,CAACwC,MAAM,GAAG,CAAC,iBACd/C,OAAA;MAAAyC,QAAA,gBACEzC,OAAA;QAAAyC,QAAA,EAAI;MAA2B;QAAApC,QAAA,EAAAqC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpC5C,OAAA;QAAOoD,MAAM,EAAC,GAAG;QAACC,WAAW,EAAC,GAAG;QAAAZ,QAAA,gBAC/BzC,OAAA;UAAAyC,QAAA,eACEzC,OAAA;YAAAyC,QAAA,EACGa,MAAM,CAACC,IAAI,CAAChD,IAAI,CAAC,CAAC,CAAC,CAAC,CAACyC,GAAG,CAAC,CAACQ,GAAG,EAAEC,GAAG,kBACjCzD,OAAA;cAAAyC,QAAA,EAAee;YAAG,GAATC,GAAG;cAAApD,QAAA,EAAAqC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CACxB;UAAC;YAAAvC,QAAA,EAAAqC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA;QAAC;UAAAvC,QAAA,EAAAqC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACR5C,OAAA;UAAAyC,QAAA,EACGlC,IAAI,CAACyC,GAAG,CAAC,CAACU,GAAG,EAAED,GAAG,kBACjBzD,OAAA;YAAAyC,QAAA,EACGa,MAAM,CAACK,MAAM,CAACD,GAAG,CAAC,CAACV,GAAG,CAAC,CAACY,GAAG,EAAEC,CAAC,kBAC7B7D,OAAA;cAAAyC,QAAA,EAAamB;YAAG,GAAPC,CAAC;cAAAxD,QAAA,EAAAqC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CACtB;UAAC,GAHKa,GAAG;YAAApD,QAAA,EAAAqC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIR,CACL;QAAC;UAAAvC,QAAA,EAAAqC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAvC,QAAA,EAAAqC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAvC,QAAA,EAAAqC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACN;EAAA;IAAAvC,QAAA,EAAAqC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC1C,EAAA,CApFuBD,UAAU;AAAA6D,EAAA,GAAV7D,UAAU;AAAA,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}